@page
@model JMUcare.Pages.Documents.ListModel
@{
    ViewData["Title"] = "Documents";
}

<div class="container mt-4">
    <h2>Document Management</h2>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="card mt-3">
        <div class="card-header d-flex justify-content-between align-items-center">
            <h5>Upload Document</h5>
        </div>
        <div class="card-body">
            <form method="post" enctype="multipart/form-data" asp-page-handler="UploadDocument">
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <label for="formFile" class="form-label">Select Document</label>
                        <input class="form-control" type="file" id="formFile" name="file" required>
                    </div>
                    <div class="col-md-6 mb-3">
                        <label for="documentType" class="form-label">Document Type</label>
                        <select class="form-select" id="documentType" name="documentType">
                            <option value="General">General</option>
                            <option value="Report">Report</option>
                            <option value="Contract">Contract</option>
                            <option value="Budget">Budget</option>
                            <option value="Biosketch">Biosketch</option>
                            <option value="Other">Other</option>

                        </select>
                    </div>
                </div>
                <button type="submit" class="btn btn-primary">Upload</button>
            </form>
        </div>
    </div>

    <div class="card mt-3">
        <div class="card-header d-flex justify-content-between align-items-center">
            <h5>All Documents</h5>
            <div class="input-group" style="max-width: 300px;">
                <input type="text" id="searchInput" class="form-control" placeholder="Search documents..." 
                       onkeyup="filterDocuments()">
                <button class="btn btn-outline-secondary" type="button" id="clearSearch" onclick="clearFilter()">
                    <i class="bi bi-x"></i>
                </button>
            </div>
        </div>
        <div class="card-body">
            @if (Model.Documents.Any())
            {
                <div class="table-responsive">
                    <table class="table table-striped" id="documentsTable">
                        <thead>
                            <tr>
                                <th>Name</th>
                                <th>Type</th>
                                <th>Size</th>
                                <th>Uploaded By</th>
                                <th>Date</th>
                                <th>Related To</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var doc in Model.Documents)
                            {
                                <tr>
                                    <td>@doc.FileName</td>
                                    <td>@doc.ContentType</td>
                                    <td>@(doc.FileSize / 1024) KB</td>
                                    <td>@Model.GetUploaderName(doc.UploadedBy)</td>
                                    <td>@doc.UploadedDate.ToString("yyyy-MM-dd")</td>
                                    <td>
                                        @if (doc.GrantID.HasValue)
                                        {
                                            <span class="badge bg-primary">Grant</span>
                                        }
                                        else if (doc.PhaseID.HasValue)
                                        {
                                            <span class="badge bg-success">Phase</span>
                                        }
                                        else if (doc.ProjectID.HasValue)
                                        {
                                            <span class="badge bg-info">Project</span>
                                        }
                                        else if (doc.TaskID.HasValue)
                                        {
                                            <span class="badge bg-warning">Task</span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-secondary">General</span>
                                        }
                                    </td>
                                    <td>
                                        <a asp-page="/Documents/Download" asp-route-id="@doc.DocumentID" class="btn btn-sm btn-primary">
                                            <i class="bi bi-download"></i> Download
                                        </a>
                                        @if (Model.CanUserEditDocument(doc))
                                        {
                                            <a asp-page-handler="DeleteDocument" asp-route-documentId="@doc.DocumentID"
                                               class="btn btn-sm btn-danger ms-2"
                                               onclick="return confirm('Are you sure you want to delete this document?');">
                                                <i class="bi bi-trash"></i> Delete
                                            </a>
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <p>No documents found.</p>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function filterDocuments() {
            var input = document.getElementById("searchInput");
            var filter = input.value.toUpperCase();
            var table = document.getElementById("documentsTable");
            var tr = table.getElementsByTagName("tr");

            for (var i = 1; i < tr.length; i++) { // Start from 1 to skip header
                var tdName = tr[i].getElementsByTagName("td")[0];
                var tdType = tr[i].getElementsByTagName("td")[1];
                var tdRelated = tr[i].getElementsByTagName("td")[5];
                
                if (tdName || tdType || tdRelated) {
                    var nameText = tdName.textContent || tdName.innerText;
                    var typeText = tdType.textContent || tdType.innerText;
                    var relatedText = tdRelated.textContent || tdRelated.innerText;
                    
                    if (nameText.toUpperCase().indexOf(filter) > -1 || 
                        typeText.toUpperCase().indexOf(filter) > -1 || 
                        relatedText.toUpperCase().indexOf(filter) > -1) {
                        tr[i].style.display = "";
                    } else {
                        tr[i].style.display = "none";
                    }
                }
            }
        }

        function clearFilter() {
            document.getElementById("searchInput").value = "";
            filterDocuments();
        }
    </script>
}
